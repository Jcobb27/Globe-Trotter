import assert from"../assert";import TransitionInterpolator from"./transition-interpolator";import{isValid,lerp,getEndValueByShortestPath}from"./transition-utils";const VIEWPORT_TRANSITION_PROPS=["longitude","latitude","zoom","bearing","pitch"];export default class LinearInterpolator extends TransitionInterpolator{constructor(transitionProps=VIEWPORT_TRANSITION_PROPS){super(),this.propNames=transitionProps}initializeProps(startProps,endProps){const startViewportProps={},endViewportProps={};for(const key of this.propNames){const startValue=startProps[key],endValue=endProps[key];assert(isValid(startValue)&&isValid(endValue),`${key} must be supplied for transition`),startViewportProps[key]=startValue,endViewportProps[key]=getEndValueByShortestPath(key,startValue,endValue)}return{start:startViewportProps,end:endViewportProps}}interpolateProps(startProps,endProps,t){const viewport={};for(const key of this.propNames)viewport[key]=lerp(startProps[key],endProps[key],t);return viewport}}
//# sourceMappingURL=linear-interpolator.js.map