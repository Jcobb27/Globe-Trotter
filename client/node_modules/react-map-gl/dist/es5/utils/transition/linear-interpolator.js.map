{"version":3,"sources":["../../../../src/utils/transition/linear-interpolator.js"],"names":["VIEWPORT_TRANSITION_PROPS","LinearInterpolator","transitionProps","propNames","startProps","endProps","startViewportProps","endViewportProps","key","startValue","endValue","start","end","t","viewport","TransitionInterpolator"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,yBAAyB,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,OAA7C,CAAlC;AAEA;;;;IAGqBC,kB;;;;;AAEnB;;;AAGA,gCAAyD;AAAA;;AAAA,QAA7CC,eAA6C,uEAA3BF,yBAA2B;;AAAA;;AACvD;AACA,UAAKG,SAAL,GAAiBD,eAAjB;AAFuD;AAGxD;;;;oCAEeE,U,EAAYC,Q,EAAU;AACpC,UAAMC,kBAAkB,GAAG,EAA3B;AACA,UAAMC,gBAAgB,GAAG,EAAzB;AAFoC;AAAA;AAAA;;AAAA;AAIpC,6BAAkB,KAAKJ,SAAvB,8HAAkC;AAAA,cAAvBK,GAAuB;AAChC,cAAMC,UAAU,GAAGL,UAAU,CAACI,GAAD,CAA7B;AACA,cAAME,QAAQ,GAAGL,QAAQ,CAACG,GAAD,CAAzB;AACA,+BAAO,8BAAQC,UAAR,KAAuB,8BAAQC,QAAR,CAA9B,YAAoDF,GAApD;AAEAF,UAAAA,kBAAkB,CAACE,GAAD,CAAlB,GAA0BC,UAA1B;AACAF,UAAAA,gBAAgB,CAACC,GAAD,CAAhB,GAAwB,gDAA0BA,GAA1B,EAA+BC,UAA/B,EAA2CC,QAA3C,CAAxB;AACD;AAXmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAapC,aAAO;AACLC,QAAAA,KAAK,EAAEL,kBADF;AAELM,QAAAA,GAAG,EAAEL;AAFA,OAAP;AAID;;;qCAEgBH,U,EAAYC,Q,EAAUQ,C,EAAG;AACxC,UAAMC,QAAQ,GAAG,EAAjB;AADwC;AAAA;AAAA;;AAAA;AAExC,8BAAkB,KAAKX,SAAvB,mIAAkC;AAAA,cAAvBK,GAAuB;AAChCM,UAAAA,QAAQ,CAACN,GAAD,CAAR,GAAgB,2BAAKJ,UAAU,CAACI,GAAD,CAAf,EAAsBH,QAAQ,CAACG,GAAD,CAA9B,EAAqCK,CAArC,CAAhB;AACD;AAJuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKxC,aAAOC,QAAP;AACD;;;;EAnC6CC,+B","sourcesContent":["import assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {isValid, lerp, getEndValueByShortestPath} from './transition-utils';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\n/**\n * Performs linear interpolation of two viewports.\n*/\nexport default class LinearInterpolator extends TransitionInterpolator {\n\n  /**\n   * @param {Array} transitionProps - list of props to apply linear transition to.\n   */\n  constructor(transitionProps = VIEWPORT_TRANSITION_PROPS) {\n    super();\n    this.propNames = transitionProps;\n  }\n\n  initializeProps(startProps, endProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    for (const key of this.propNames) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key of this.propNames) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n    return viewport;\n  }\n\n}\n"],"file":"linear-interpolator.js"}