{"version":3,"sources":["../../../../src/utils/transition/linear-interpolator.js"],"names":["assert","TransitionInterpolator","isValid","lerp","getEndValueByShortestPath","VIEWPORT_TRANSITION_PROPS","LinearInterpolator","constructor","transitionProps","propNames","initializeProps","startProps","endProps","startViewportProps","endViewportProps","key","startValue","endValue","start","end","interpolateProps","t","viewport"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,sBAAP,KAAmC,2BAAnC,CAEA,OAAQC,OAAR,CAAiBC,IAAjB,CAAuBC,yBAAvB,KAAuD,oBAAvD,CAEA,KAAMC,CAAAA,yBAAyB,CAAG,CAAC,WAAD,CAAc,UAAd,CAA0B,MAA1B,CAAkC,SAAlC,CAA6C,OAA7C,CAAlC,CAKA,cAAe,MAAMC,CAAAA,kBAAN,QAAiCL,CAAAA,sBAAuB,CAKrEM,WAAW,CAACC,eAAe,CAAGH,yBAAnB,CAA8C,CACvD,OADuD,CAEvD,KAAKI,SAAL,CAAiBD,eAClB,CAEDE,eAAe,CAACC,UAAD,CAAaC,QAAb,CAAuB,MAC9BC,CAAAA,kBAAkB,CAAG,EADS,CAE9BC,gBAAgB,CAAG,EAFW,CAIpC,IAAK,KAAMC,CAAAA,GAAX,GAAkB,MAAKN,SAAvB,CAAkC,MAC1BO,CAAAA,UAAU,CAAGL,UAAU,CAACI,GAAD,CADG,CAE1BE,QAAQ,CAAGL,QAAQ,CAACG,GAAD,CAFO,CAGhCf,MAAM,CAACE,OAAO,CAACc,UAAD,CAAP,EAAuBd,OAAO,CAACe,QAAD,CAA/B,CAA4C,GAAEF,GAAI,kCAAlD,CAH0B,CAKhCF,kBAAkB,CAACE,GAAD,CAAlB,CAA0BC,UALM,CAMhCF,gBAAgB,CAACC,GAAD,CAAhB,CAAwBX,yBAAyB,CAACW,GAAD,CAAMC,UAAN,CAAkBC,QAAlB,CAClD,CAED,MAAO,CACLC,KAAK,CAAEL,kBADF,CAELM,GAAG,CAAEL,gBAFA,CAIR,CAEDM,gBAAgB,CAACT,UAAD,CAAaC,QAAb,CAAuBS,CAAvB,CAA0B,CACxC,KAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACA,IAAK,KAAMP,CAAAA,GAAX,GAAkB,MAAKN,SAAvB,CACEa,QAAQ,CAACP,GAAD,CAAR,CAAgBZ,IAAI,CAACQ,UAAU,CAACI,GAAD,CAAX,CAAkBH,QAAQ,CAACG,GAAD,CAA1B,CAAiCM,CAAjC,CAApB,CAEF,MAAOC,CAAAA,QACR,CAnCoE","sourcesContent":["import assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {isValid, lerp, getEndValueByShortestPath} from './transition-utils';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\n/**\n * Performs linear interpolation of two viewports.\n*/\nexport default class LinearInterpolator extends TransitionInterpolator {\n\n  /**\n   * @param {Array} transitionProps - list of props to apply linear transition to.\n   */\n  constructor(transitionProps = VIEWPORT_TRANSITION_PROPS) {\n    super();\n    this.propNames = transitionProps;\n  }\n\n  initializeProps(startProps, endProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    for (const key of this.propNames) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key of this.propNames) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n    return viewport;\n  }\n\n}\n"],"file":"linear-interpolator.js"}